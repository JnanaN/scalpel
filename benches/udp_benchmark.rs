use criterion::{criterion_group, criterion_main, Criterion};

use scalpel::register_defaults;
use scalpel::Packet;
use scalpel::ENCAP_TYPE_ETH;

pub fn new_dns_packet_from_u8(c: &mut Criterion) {
    let dns_query = vec![
	0xfe, 0x54, 0x00, 0x3e, 0x00, 0x96, 0x52, 0x54, /* .T.>..RT */
	0x00, 0xbd, 0x1c, 0x70, 0x08, 0x00, 0x45, 0x00, /* ...p..E. */
	0x00, 0x3c, 0x22, 0xe0, 0x00, 0x00, 0x40, 0x11, /* .<"...@. */
	0xe2, 0x38, 0xc0, 0xa8, 0x7a, 0x46, 0xc0, 0xa8, /* .8..zF.. */
	0x7a, 0x01, 0xc3, 0x35, 0x00, 0x35, 0x00, 0x28, /* z..5.5.( */
	0x75, 0xd2, 0x52, 0x41, 0x01, 0x00, 0x00, 0x01, /* u.RA.... */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x77, /* .......w */
	0x77, 0x77, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, /* ww.googl */
	0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x01, /* e.com... */
	0x00, 0x01, /* .. */];
    let _ = register_defaults();
    c.bench_function("Parse_DNS", |b| {
        b.iter(|| Packet::from_u8(&dns_query, ENCAP_TYPE_ETH))
    });
}

criterion_group!(layer3, new_dns_packet_from_u8);
criterion_main!(layer3);
